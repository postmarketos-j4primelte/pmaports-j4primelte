diff --git a/src/invoker/CMakeLists.txt b/src/invoker/CMakeLists.txt
index 6531ca0..3a35a6b 100644
--- a/src/invoker/CMakeLists.txt
+++ b/src/invoker/CMakeLists.txt
@@ -19,6 +19,6 @@ add_executable(invoker ${SRC})
 target_link_libraries(invoker ${DBUS_LDFLAGS})
 
 # Add install rule
-install(PROGRAMS invoker DESTINATION /usr/bin/)
+install(TARGETS invoker DESTINATION /usr/bin/)
 
 
diff --git a/src/launcherlib/CMakeLists.txt b/src/launcherlib/CMakeLists.txt
index 3d986ca..89eacd1 100644
--- a/src/launcherlib/CMakeLists.txt
+++ b/src/launcherlib/CMakeLists.txt
@@ -1,6 +1,11 @@
 set(COMMON ${CMAKE_HOME_DIRECTORY}/src/common)
 
-include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${COMMON})
+# Find systemd
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(SYSTEMD "libsystemd" REQUIRED)
+
+# Set include dirs
+include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${SYSTEMD_INCLUDE_DIRS} ${COMMON})
 
 # Hide all symbols except the ones explicitly exported in the code (like main())
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden")
@@ -12,14 +17,13 @@ set(SRC appdata.cpp booster.cpp connection.cpp daemon.cpp logger.cpp
 set(HEADERS appdata.h booster.h connection.h daemon.h logger.h launcherlib.h
     singleinstance.h socketmanager.h ${COMMON}/protocol.h)
 
-# Set libraries to be linked. Shared libraries to be preloaded are not linked in anymore,
-# but dlopen():ed and listed in src/launcher/preload.h instead.
-link_libraries(${LIBDL} "-L/lib -lsystemd")
-
 # Set executable
 add_library(applauncherd MODULE ${SRC} ${MOC_SRC})
 set_target_properties(applauncherd PROPERTIES VERSION 0.1 SOVERSION 0)
 
+target_link_libraries(applauncherd ${SYSTEMD_LIBRARIES})
+
+
 # Add install rule
 install(TARGETS applauncherd DESTINATION /usr/lib)
 install(FILES ${HEADERS} DESTINATION /usr/include/applauncherd
diff --git a/src/launcherlib/booster.cpp b/src/launcherlib/booster.cpp
index 235f2a0..5645e6a 100644
--- a/src/launcherlib/booster.cpp
+++ b/src/launcherlib/booster.cpp
@@ -46,6 +46,7 @@
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <grp.h>
+#include <libgen.h>
 
 #include "coverage.h"
 
@@ -327,7 +328,7 @@ void Booster::renameProcess(int parentArgc, char** parentArgv,
         }
 
         // Set the process name using prctl, 'killall' and 'top' use it
-        if ( prctl(PR_SET_NAME, basename(sourceArgv[0])) == -1 )
+        if ( prctl(PR_SET_NAME, basename(const_cast<char*>(sourceArgv[0]))) == -1 )
             Logger::logError("Booster: on set new process name: %s ", strerror(errno));
 
         setenv("_", sourceArgv[0], true);
@@ -583,7 +584,7 @@ void* Booster::loadMain()
     else
         dlopenFlags |= RTLD_LOCAL;
 
-#if (PLATFORM_ID == Linux)
+#if (PLATFORM_ID == Linux) && defined(__GLIBC__)
     if (m_appData->dlopenDeep())
         dlopenFlags |= RTLD_DEEPBIND;
 #endif
diff --git a/src/launcherlib/connection.cpp b/src/launcherlib/connection.cpp
index b5dd89d..352704b 100644
--- a/src/launcherlib/connection.cpp
+++ b/src/launcherlib/connection.cpp
@@ -281,8 +281,8 @@ bool Connection::receiveArgs()
 {
     // Get argc
     recvMsg(&m_argc);
-    const uint32_t ARG_MAX = 1024;
-    if (m_argc > 0 && m_argc < ARG_MAX)
+    const uint32_t _ARG_MAX = 1024;
+    if (m_argc > 0 && m_argc < _ARG_MAX)
     {
         // Reserve memory for argv
         m_argv = new const char * [m_argc];
diff --git a/src/single-instance/CMakeLists.txt b/src/single-instance/CMakeLists.txt
index cc04ba2..acc1439 100644
--- a/src/single-instance/CMakeLists.txt
+++ b/src/single-instance/CMakeLists.txt
@@ -26,4 +26,4 @@ link_libraries(${DBUS_LDFLAGS})
 add_executable(single-instance ${SRC})
 
 # Add install rule
-install(PROGRAMS single-instance DESTINATION /usr/bin/)
+install(TARGETS single-instance DESTINATION /usr/bin/)
