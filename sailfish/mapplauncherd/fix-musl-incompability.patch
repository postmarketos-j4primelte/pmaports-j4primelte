diff --git a/src/invoker/invoker.c b/src/invoker/invoker.c
index ba81f7b..1a806d9 100644
--- a/src/invoker/invoker.c
+++ b/src/invoker/invoker.c
@@ -26,7 +26,6 @@
 #include <string.h>
 #include <signal.h>
 #include <sys/socket.h>
-#include <bits/socket.h>
 #include <sys/un.h>
 #include <sys/uio.h>
 #include <sys/time.h>
diff --git a/src/launcherlib/booster.cpp b/src/launcherlib/booster.cpp
index 235f2a0..5645e6a 100644
--- a/src/launcherlib/booster.cpp
+++ b/src/launcherlib/booster.cpp
@@ -46,6 +46,7 @@
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <grp.h>
+#include <libgen.h>
 
 #include "coverage.h"
 
@@ -327,7 +328,7 @@ void Booster::renameProcess(int parentArgc, char** parentArgv,
         }
 
         // Set the process name using prctl, 'killall' and 'top' use it
-        if ( prctl(PR_SET_NAME, basename(sourceArgv[0])) == -1 )
+        if ( prctl(PR_SET_NAME, basename(const_cast<char*>(sourceArgv[0]))) == -1 )
             Logger::logError("Booster: on set new process name: %s ", strerror(errno));
 
         setenv("_", sourceArgv[0], true);
@@ -583,7 +584,7 @@ void* Booster::loadMain()
     else
         dlopenFlags |= RTLD_LOCAL;
 
-#if (PLATFORM_ID == Linux)
+#if (PLATFORM_ID == Linux) && defined(__GLIBC__)
     if (m_appData->dlopenDeep())
         dlopenFlags |= RTLD_DEEPBIND;
 #endif
diff --git a/src/launcherlib/connection.cpp b/src/launcherlib/connection.cpp
index b5dd89d..352704b 100644
--- a/src/launcherlib/connection.cpp
+++ b/src/launcherlib/connection.cpp
@@ -281,8 +281,8 @@ bool Connection::receiveArgs()
 {
     // Get argc
     recvMsg(&m_argc);
-    const uint32_t ARG_MAX = 1024;
-    if (m_argc > 0 && m_argc < ARG_MAX)
+    const uint32_t _ARG_MAX = 1024;
+    if (m_argc > 0 && m_argc < _ARG_MAX)
     {
         // Reserve memory for argv
         m_argv = new const char * [m_argc];
