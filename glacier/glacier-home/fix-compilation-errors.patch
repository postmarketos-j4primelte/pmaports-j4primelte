diff --git a/.gitignore b/.gitignore
index 9ba69f0..d679d85 100644
--- a/.gitignore
+++ b/.gitignore
@@ -15,3 +15,11 @@ Makefile
 installroot/
 RPMS/
 debug*.list
+CMakeCache.txt
+*.qm
+*.cmake
+CMakeFiles
+lipstick
+lipstick_autogen
+prefix.sh
+install_manifest.txt
diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..cb5dd74
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,69 @@
+cmake_minimum_required(VERSION 3.6.0)
+
+project(glacier-home
+	VERSION 0.27.8
+	DESCRIPTION "Glacier UX homescreen")
+
+set(CMAKE_AUTOMOC ON)
+set(CMAKE_AUTORCC ON)
+
+set(CMAKE_INCLUDE_CURRENT_DIR ON)
+
+include(FindPkgConfig)
+include(FeatureSummary)
+include(GNUInstallDirs)
+
+option(USE_SYSTEMD "Use systemd services" ON)
+
+set(QT_MIN_VERSION "5.9.0")
+find_package(Qt5 ${QT_MIN_VERSION} REQUIRED COMPONENTS
+	Gui
+	Qml
+	Quick
+	DBus
+	LinguistTools)
+if(QT_VERSION LESS "5.11.0")
+	find_package(Qt5 REQUIRED COMPONENTS Compositor)
+else()
+	find_package(Qt5 REQUIRED COMPONENTS WaylandCompositor)
+endif()
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(LIPSTICK lipstick-qt5 REQUIRED IMPORTED_TARGET)
+pkg_check_modules(NEMODEVICELOCK nemodevicelock REQUIRED IMPORTED_TARGET)
+
+find_package(ECM REQUIRED NO_MODULE)
+set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH})
+find_package(KF5 REQUIRED COMPONENTS BluezQt)
+
+add_definitions(-DBLUEZQT_VERSION_MAJOR=${KF5BluezQt_VERSION_MAJOR})
+add_definitions(-DBLUEZQT_VERSION_MINOR=${KF5BluezQt_VERSION_MINOR})
+
+include(KDEInstallDirs)
+include(KDECMakeSettings)
+
+add_subdirectory(src)
+
+if(USE_SYSTEMD)
+	install(FILES data/lipstick.service
+		DESTINATION ${CMAKE_INSTALL_LIBDIR}/systemd/user)
+endif()
+
+install(FILES data/glacier-home.privileges
+	DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/mapplauncherd/privileges.d)
+install(FILES data/nemovars.conf
+	DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/lipstick-glacier-home-qt5)
+install(FILES
+		data/90-glacier-powerkey.conf
+		data/90-glacier-devlock.conf
+	DESTINATION ${CMAKE_INSTALL_SYSCONFDIR}/mce)
+
+# Translations
+file(GLOB TS_FILES translations/*.ts)
+qt5_add_translation(QM_FILES ${TS_FILES})
+add_custom_target(translations DEPENDS ${QM_FILES})
+add_dependencies(lipstick translations)
+
+install(FILES ${QM_FILES}
+	DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/lipstick-glacier-home-qt5/translations)
+
+feature_summary(WHAT ALL FATAL_ON_MISSING_REQUIRED_PACKAGES)
diff --git a/src/data/90-glacier-devlock.conf b/data/90-glacier-devlock.conf
similarity index 100%
rename from src/data/90-glacier-devlock.conf
rename to data/90-glacier-devlock.conf
diff --git a/src/data/90-glacier-powerkey.conf b/data/90-glacier-powerkey.conf
similarity index 100%
rename from src/data/90-glacier-powerkey.conf
rename to data/90-glacier-powerkey.conf
diff --git a/src/data/glacier-home.privileges b/data/glacier-home.privileges
similarity index 100%
rename from src/data/glacier-home.privileges
rename to data/glacier-home.privileges
diff --git a/src/data/lipstick.service b/data/lipstick.service
similarity index 100%
rename from src/data/lipstick.service
rename to data/lipstick.service
diff --git a/data/nemovars.conf b/data/nemovars.conf
new file mode 100644
index 0000000..7140719
--- /dev/null
+++ b/data/nemovars.conf
@@ -0,0 +1,2 @@
+QT_QUICK_CONTROLS_STYLE=Nemo
+GLACIER_NATIVEORIENTATION=1
diff --git a/glacier-home.pro b/glacier-home.pro
deleted file mode 100644
index ce78538..0000000
--- a/glacier-home.pro
+++ /dev/null
@@ -1,105 +0,0 @@
-# Main project file for Glacier home
-
-TEMPLATE = app
-TARGET = lipstick
-VERSION = 0.1
-
-INSTALLS = target
-target.path = /usr/bin
-
-styles.path = /usr/share/lipstick-glacier-home-qt5
-styles.files = src/nemovars.conf
-
-qml.path = /usr/share/lipstick-glacier-home-qt5/
-qml.files = src/qml/
-
-settingswallpaperplugin.files = src/settings-plugins/wallpaper/wallpaper.qml \
-                       src/settings-plugins/wallpaper/selectImage.qml \
-                       src/settings-plugins/wallpaper/wallpaper.svg
-
-settingswallpaperplugin.path = /usr/share/glacier-settings/qml/plugins/wallpaper
-
-settingsnotificationsplugin.files = src/settings-plugins/notifications/notifications.qml \
-                       src/settings-plugins/notifications/notifications.svg
-
-settingsnotificationsplugin.path = /usr/share/glacier-settings/qml/plugins/notifications
-
-
-settingsdesktopplugin.files = src/settings-plugins/desktop/desktop.qml \
-                       src/settings-plugins/desktop/desktop.svg
-
-settingsdesktopplugin.path = /usr/share/glacier-settings/qml/plugins/desktop
-
-settingspluginconfig.files = src/settings-plugins/wallpaper/wallpaper.json \
-                             src/settings-plugins/notifications/notifications.json \
-                             src/settings-plugins/desktop/desktop.json
-
-settingspluginconfig.path = /usr/share/glacier-settings/plugins
-
-systemd.files = src/data/lipstick.service
-systemd.path = /usr/lib/systemd/user
-
-privileges.files = src/data/glacier-home.privileges
-privileges.path = /usr/share/mapplauncherd/privileges.d/
-
-mce.files = src/data/90-glacier-powerkey.conf \
-            src/data/90-glacier-devlock.conf
-mce.path = /etc/mce
-
-INSTALLS += styles \
-            qml \
-            settingswallpaperplugin\
-            settingsnotificationsplugin\
-            settingspluginconfig \
-            settingsdesktopplugin \
-            systemd \
-            privileges \
-            mce
-
-CONFIG += qt link_pkgconfig
-QT += quick dbus
-equals(QT_MAJOR_VERSION, 5):lessThan(QT_MINOR_VERSION, 7) {
-QT += compositor
-}
-equals(QT_MAJOR_VERSION, 5):greaterThan(QT_MINOR_VERSION,7) {
-QT += waylandcompositor
-}
-DEFINES += QT_COMPOSITOR_QUICK
-HEADERS += \
-    src/bluetooth/bluetoothagent.h \
-    src/fileutils.h \
-    src/glacierwindowmodel.h \
-    src/mceconnect.h
-
-LIBS += -lnemodevicelock
-MOC_DIR = .moc
-
-SOURCES += \
-    src/bluetooth/bluetoothagent.cpp \
-    src/fileutils.cpp \
-    src/main.cpp \
-    src/glacierwindowmodel.cpp \
-    src/mceconnect.cpp
-
-PKGCONFIG += lipstick-qt5 \
-    nemodevicelock \
-    KF5BluezQt
-
-OTHER_FILES += src/nemovars.conf
-
-TRANSLATIONS += translations/glacer-home.ts \
-                translations/glacer-home_ru.ts \
-                translations/glacer-home_cs.ts
-
-i18n_files.files = translations
-i18n_files.path = /usr/share/lipstick-glacier-home-qt5/
-
-INSTALLS += i18n_files
-
-DISTFILES += \
-    src/data/90-glacier-devlock.conf \
-    translations/*.ts \
-    settings-plugins/*/*.qml \
-    settings-plugins/*/*.json \
-    settings-plugins/*/*.svg \
-    rpm/*
diff --git a/rpm/lipstick-glacier-home-qt5.spec b/rpm/lipstick-glacier-home-qt5.spec
index d511e0c..5203fb6 100644
--- a/rpm/lipstick-glacier-home-qt5.spec
+++ b/rpm/lipstick-glacier-home-qt5.spec
@@ -32,12 +32,14 @@ Requires:   pulseaudio-modules-nemo-parameters
 Requires:   libqofonoext-declarative
 Requires:   qt5-qtmultimedia-plugin-audio-pulseaudio
 
+BuildRequires:  cmake
+BuildRequires:  extra-cmake-modules >= 5.68.0
 BuildRequires:  pkgconfig(Qt5Core)
 BuildRequires:  pkgconfig(Qt5Quick)
 BuildRequires:  pkgconfig(lipstick-qt5) >= 0.12.0
-BuildRequires:  pkgconfig(Qt5Compositor)
+BuildRequires:  pkgconfig(Qt5WaylandCompositor)
 BuildRequires:  pkgconfig(nemodevicelock)
-BuildRequires:  pkgconfig(KF5BluezQt)
+BuildRequires:  kf5bluezqt-bluez5-devel >= 5.68.0
 
 Provides: lipstick-colorful-home-qt5
 
@@ -50,14 +52,21 @@ A homescreen for Nemo Mobile
 %setup -q -n %{name}-%{version}
 
 %build
-%qmake5
-
-make %{?_smp_mflags}
+mkdir build
+cd build
+cmake \
+	-DCMAKE_BUILD_TYPE=Release \
+	-DCMAKE_INSTALL_PREFIX=%{_prefix} \
+	-DCMAKE_INSTALL_LIBDIR=%{_libdir} \
+	-DCMAKE_INSTALL_SYSCONFDIR=%{_sysconfdir} \
+	-DCMAKE_VERBOSE_MAKEFILE=ON \
+	..
+cmake --build .
 
 %install
+cd build
 rm -rf %{buildroot}
-
-%qmake5_install
+DESTDIR=%{buildroot} cmake --build . --target install
 
 mkdir -p %{buildroot}%{_libdir}/systemd/user/user-session.target.wants/
 ln -s ../lipstick.service %{buildroot}%{_libdir}/systemd/user/user-session.target.wants/lipstick.service
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
new file mode 100644
index 0000000..9be3272
--- /dev/null
+++ b/src/CMakeLists.txt
@@ -0,0 +1,62 @@
+set(SRC
+	main.cpp
+	fileutils.cpp
+	fileutils.h
+	glacierwindowmodel.cpp
+	glacierwindowmodel.h
+	mceconnect.cpp
+	mceconnect.h
+	bluetooth/bluetoothagent.cpp
+	bluetooth/bluetoothagent.h)
+
+#qt5_add_resources(RESOURCES resources-qml.qrc)
+
+add_executable(lipstick ${SRC})
+
+target_link_libraries(lipstick PUBLIC
+	Qt5::Gui
+	Qt5::Qml
+	Qt5::Quick
+	Qt5::DBus
+	KF5::BluezQt
+	PkgConfig::LIPSTICK
+	PkgConfig::NEMODEVICELOCK)
+
+if(QT_VERSION EQUAL "5.6.0")
+	target_link_libraries(lipstick PUBLIC
+		Qt5::Compositor)
+else()
+	target_link_libraries(lipstick PUBLIC
+		Qt5::WaylandCompositor)
+endif()
+
+install(TARGETS lipstick RUNTIME
+	DESTINATION ${CMAKE_INSTALL_BINDIR})
+install(DIRECTORY qml
+	DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/lipstick-glacier-home-qt5)
+
+file(GLOB SETTINGS_WALLPAPERPLUGIN settings-plugins/wallpaper/*)
+list(REMOVE_ITEM SETTINGS_WALLPAPERPLUGIN wallpaper.json)
+install(FILES ${SETTINGS_WALLPAPERPLUGIN}
+	DESTINATION
+	${CMAKE_INSTALL_DATAROOTDIR}/glacier-settings/qml/plugins/wallpaper)
+
+file(GLOB SETTINGS_NOTIFICATIONSPLUGIN settings-plugins/notifications/*)
+list(REMOVE_ITEM SETTINGS_NOTIFICATIONSPLUGIN notifications.json)
+install(FILES ${SETTINGS_WALLPAPERPLUGIN}
+	DESTINATION
+	${CMAKE_INSTALL_DATAROOTDIR}/glacier-settings/qml/plugins/notifications)
+
+file(GLOB SETTINGS_DESKTOPPLUGIN settings-plugins/desktop/*)
+list(REMOVE_ITEM SETTINGS_DESKTOPPLUGIN desktop.json)
+install(FILES ${SETTINGS_WALLPAPERPLUGIN}
+	DESTINATION
+	${CMAKE_INSTALL_DATAROOTDIR}/glacier-settings/qml/plugins/desktop)
+
+set(SETTINGS_PLUGINCONFIG
+	settings-plugins/wallpaper/wallpaper.json
+	settings-plugins/notifications/notifications.json
+	settings-plugins/desktop/desktop.json)
+install(FILES ${SETTINGS_PLUGINCONFIG}
+	DESTINATION
+	${CMAKE_INSTALL_DATAROOTDIR}/glacier-settings/plugins)
diff --git a/src/bluetooth/bluetoothagent.cpp b/src/bluetooth/bluetoothagent.cpp
index 4eb0a88..826ac07 100644
--- a/src/bluetooth/bluetoothagent.cpp
+++ b/src/bluetooth/bluetoothagent.cpp
@@ -19,11 +19,17 @@
 // SOFTWARE.
 //
 // Copyright (c) 2020, Chupligin Sergey <neochapay@gmail.com>
+#include <QDebug>
 
 #include "bluetoothagent.h"
 
-#include <device.h>
-#include <initmanagerjob.h>
+#if BLUEZQT_VERSION_MAJOR == 5 && BLUEZQT_VERSION_MINOR < 68
+# include <device.h>
+# include <initmanagerjob.h>
+#else
+# include <bluezqt/device.h>
+# include <bluezqt/initmanagerjob.h>
+#endif
 
 BluetoothAgent::BluetoothAgent(QObject *parent)
     : BluezQt::Agent(parent)
@@ -71,7 +77,11 @@ void BluetoothAgent::pair(const QString &btMacAddress)
         return;
     }
 
+#if BLUEZQT_VERSION_MAJOR == 5 && BLUEZQT_VERSION_MINOR < 68
     BluezQt::PendingCall *pcall = m_manager->pairWithDevice(btMacAddress);
+#else
+    BluezQt::PendingCall *pcall = device->pair();
+#endif
     pcall->setUserData(btMacAddress);
 
     connect(pcall, &BluezQt::PendingCall::finished,
@@ -119,8 +129,13 @@ void BluetoothAgent::usableAdapterChanged(BluezQt::AdapterPtr adapter)
         emit adapterAdded(adapter);
         m_usableAdapter = adapter;
 
-        connect(m_usableAdapter.data(), &BluezQt::Adapter::connectedChanged,
+#if BLUEZQT_VERSION_MAJOR == 5 && BLUEZQT_VERSION_MINOR < 68
+	connect(m_usableAdapter.data(), &BluezQt::Adapter::connectedChanged,
+		this, &BluetoothAgent::updateConnectedStatus);
+#else
+        connect(m_usableAdapter.data(), &BluezQt::Adapter::deviceChanged,
                 this, &BluetoothAgent::updateConnectedStatus);
+#endif
     }
 }
 
@@ -166,9 +181,23 @@ void BluetoothAgent::requestDefaultAgentFinished(BluezQt::PendingCall *call)
 
 void BluetoothAgent::updateConnectedStatus()
 {
+#if BLUEZQT_VERSION_MAJOR == 5 && BLUEZQT_VERSION_MINOR < 68
     if(m_connected != m_usableAdapter->isConnected())
     {
         m_connected = m_usableAdapter->isConnected();
+#else
+    bool isSomebodyConnected = false;
+    for (const auto &device : m_usableAdapter->devices()) {
+        if (device->isConnected()) {
+            isSomebodyConnected = true;
+            break;
+        }
+    }
+    
+    if(m_connected != isSomebodyConnected)
+    {
+        m_connected = isSomebodyConnected;
+#endif
         emit connectedChanged();
     }
 }
diff --git a/src/bluetooth/bluetoothagent.h b/src/bluetooth/bluetoothagent.h
index 9cd24c0..c9a61ff 100644
--- a/src/bluetooth/bluetoothagent.h
+++ b/src/bluetooth/bluetoothagent.h
@@ -1,7 +1,3 @@
-#ifndef BLUETOOTHAGENT_H
-#define BLUETOOTHAGENT_H
-
-#include <QObject>
 // This file is part of glacier-home, a nice user experience for NemoMobile.
 //
 // Permission is hereby granted, free of charge, to any person obtaining a copy
@@ -24,13 +20,26 @@
 //
 // Copyright (c) 2020, Chupligin Sergey <neochapay@gmail.com>
 
+#ifndef BLUETOOTHAGENT_H
+#define BLUETOOTHAGENT_H
+
+#include <QObject>
+
 #include <QDBusObjectPath>
 
-#include <agent.h>
-#include <adapter.h>
-#include <request.h>
-#include <manager.h>
-#include <pendingcall.h>
+#if BLUEZQT_VERSION_MAJOR == 5 && BLUEZQT_VERSION_MINOR < 68
+# include <agent.h>
+# include <adapter.h>
+# include <request.h>
+# include <manager.h>
+# include <pendingcall.h>
+#else
+# include <bluezqt/agent.h>
+# include <bluezqt/adapter.h>
+# include <bluezqt/request.h>
+# include <bluezqt/manager.h>
+# include <bluezqt/pendingcall.h>
+#endif
 
 class BluetoothAgent : public BluezQt::Agent
 {
